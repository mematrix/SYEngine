#pragma once

#include "pch.h"
#include <initguid.h>

//{1AD9830C-34A1-498F-B786-90EDE20F581B}
DEFINE_GUID(MF_MY_STREAM_ID,
0x1ad9830c, 0x34a1, 0x498f, 0xb7, 0x86, 0x90, 0xed, 0xe2, 0xf, 0x58, 0x1b);
//{1229E67F-4BC3-4985-B015-D2410FCA928F}
DEFINE_GUID(MF_MY_STREAM_NAME,
0x1229e67f, 0x4bc3, 0x4985, 0xb0, 0x15, 0xd2, 0x41, 0xf, 0xca, 0x92, 0x8f);
//{9FACAED0-D9A3-4813-B26A-CFB6044BEF92}
DEFINE_GUID(MF_MT_MY_PCM_BE_FLAG,
0x9facaed0, 0xd9a3, 0x4813, 0xb2, 0x6a, 0xcf, 0xb6, 0x4, 0x4b, 0xef, 0x92);

//{7A69A751-E34C-4611-9265-A2A218189BE0}
DEFINE_GUID(MF_MY_PD_MEDIA_DESC,
0x7a69a751, 0xe34c, 0x4611, 0x92, 0x65, 0xa2, 0xa2, 0x18, 0x18, 0x9b, 0xe0);
//{D764AE6E-F471-436C-86E8-513EE97F8076}
DEFINE_GUID(MF_MT_MY_FORCE_FLOAT32PCM16,
0xd764ae6e, 0xf471, 0x436c, 0x86, 0xe8, 0x51, 0x3e, 0xe9, 0x7f, 0x80, 0x76);
//{D764AE7E-F471-436C-86E8-513EE97F8076}
DEFINE_GUID(MF_MT_MY_DECODE_BUF_TIME_MS,
0xd764ae7e, 0xf471, 0x436c, 0x86, 0xe8, 0x51, 0x3e, 0xe9, 0x7f, 0x80, 0x76);

//{607F6619-D9B5-4089-83C5-D56A6C35756F}
DEFINE_GUID(MF_MT_CORE_DEMUX_MIMETYPE,
0x607f6619, 0xd9b5, 0x4089, 0x83, 0xc5, 0xd5, 0x6a, 0x6c, 0x35, 0x75, 0x6f);
//{D872BF70-B2BB-4032-AE5D-81D3B6F3DE64}
DEFINE_GUID(MF_MT_CORE_DEMUX_FRAMERATE,
0xd872bf70, 0xb2bb, 0x4032, 0xae, 0x5d, 0x81, 0xd3, 0xb6, 0xf3, 0xde, 0x64);

//{96055856-F076-4B19-A7BD-86DF18ED504C}
DEFINE_GUID(MF_MT_CORE_DEMUX_PARSER_POINTER,
0x96055856, 0xf076, 0x4b19, 0xa7, 0xbd, 0x86, 0xdf, 0x18, 0xed, 0x50, 0x4c);
//{96055857-F076-4B19-A7BD-86DF18ED504C}
DEFINE_GUID(MF_MT_CORE_DEMUX_STREAM_POINTER,
0x96055857, 0xf076, 0x4b19, 0xa7, 0xbd, 0x86, 0xdf, 0x18, 0xed, 0x50, 0x4c);

//{61C9988E-7E92-4D0F-80CE-3D904586EE91}
DEFINE_GUID(MF_MT_MY_TRANSFORM_FILTER_ALLOW,
0x61c9988e, 0x7e92, 0x4d0f, 0x80, 0xce, 0x3d, 0x90, 0x45, 0x86, 0xee, 0x91);
//{71C9988E-7E92-4D0F-80CE-3D904586EE91}
DEFINE_GUID(MF_MT_MY_TRANSFORM_FILTER_INTERFACE,
0x71c9988e, 0x7e92, 0x4d0f, 0x80, 0xce, 0x3d, 0x90, 0x45, 0x86, 0xee, 0x91);
//{7024BF49-3CD2-4A42-917C-ADFC0261D3B5}
DEFINE_GUID(MF_MT_MY_TRANSFORM_FILTER_RAWTYPE,
0x7024bf49, 0x3cd2, 0x4a42, 0x91, 0x7c, 0xad, 0xfc, 0x2, 0x61, 0xd3, 0xb5);

//Dolby TrueHD 2ch and 5.1ch
DEFINE_MEDIATYPE_GUID(MFAudioFormat_Dolby_TrueHD,FCC('DTHD'));
//RealMedia Cook Audio
DEFINE_MEDIATYPE_GUID(MFAudioFormat_Real_Cook,FCC('COOK'));

//BD LPCM Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_LPCM_BD,FCC('BDAU'));
//DVD LPCM Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_LPCM_DVD,FCC('DVDA'));

//FLAC Framed Decoder
DEFINE_GUID(MFAudioFormat_DS_FLAC_Framed,0x1541c5c0,0xcddf,0x477d,0xbc,0x0a,0x86,0xf8,0xae,0x7f,0x83,0x54);
DEFINE_MEDIATYPE_GUID(MFAudioFormat_FLAC_FRAMED,FCC('FLAF'));
DEFINE_GUID(MF_MT_FLAC_MAX_BLOCK_SIZE,0x8B81ADAE,0x4B5A,0x4D40,0x80,0x22,0xF3,0x8D,0x09,0xCA,0x3C,0x5C);
//Vorbis Framed Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_Vorbis_FRAMED,FCC('OGGF'));
DEFINE_GUID(MF_MT_VORBIS_MAX_BLOCK_SIZE,0x8B82ADAE,0x4B5A,0x4D40,0x80,0x22,0xF3,0x8D,0x09,0xCA,0x3C,0x5C);
//Opus Framed Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_OPUS_FRAMED,FCC('OPUS'));
DEFINE_GUID(MF_MT_OPUS_MAX_BLOCK_SIZE,0x8B83ADAE,0x4B5A,0x4D40,0x80,0x22,0xF3,0x8D,0x09,0xCA,0x3C,0x5C);
//MP3 Framed Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_MPA_FRAMED,FCC('MPAD'));
DEFINE_GUID(MF_MT_MPEG_AUDIO_LEVEL,0x8B83ADAE,0x4B5A,0x4D40,0x80,0x22,0xF3,0x8D,0x09,0xCA,0x3C,0x5C);

//ADecoder Internal Example
DEFINE_MEDIATYPE_GUID(MFAudioFormat_PCM_BE,FCC('PCMB'));
//FAAD AAC Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_FAAD,FCC('FAAD'));
//MPG123 MPEG Audio Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_M123,FCC('M123'));
//TAK ffmpeg Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_TAK2,FCC('tak2'));
//TTA Version1 Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_TTA1,FCC('tta1'));
//WavPack4 Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_WV4,FCC('wvp4'));
//ALAC Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_ALAC,FCC('alac'));
//FLAC Decoder
DEFINE_MEDIATYPE_GUID(MFAudioFormat_FLAC,0x0000F1AC);

//H264 and HEVC with MP4
DEFINE_MEDIATYPE_GUID(MFVideoFormat_AVC1,FCC('avc1'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_HVC1,FCC('hvc1'));

//Real Video Codec
DEFINE_MEDIATYPE_GUID(MFVideoFormat_RV10,FCC('RV10'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_RV20,FCC('RV20'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_RV30,FCC('RV30'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_RV40,FCC('RV40'));

//On2 VP6
DEFINE_MEDIATYPE_GUID(MFVideoFormat_VP6,FCC('VP60'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_VP6F,FCC('VP6F'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_VP6A,FCC('VP6A'));

//Google VP8 and VP9
DEFINE_MEDIATYPE_GUID(MFVideoFormat_VP8,FCC('VP80'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_VP9,FCC('VP90'));
DEFINE_MEDIATYPE_GUID(MFVideoFormat_VP10,FCC('VP10'));

//Intel QuickSync Decoder - VC1
DEFINE_MEDIATYPE_GUID(MFVideoFormat_Intel_QS_VC1,FCC('QSD1'));
//Intel QuickSync Decoder - MPEG2
DEFINE_MEDIATYPE_GUID(MFVideoFormat_Intel_QS_MPEG2,FCC('QSD2'));
//Intel QuickSync Decoder - WMV9
DEFINE_MEDIATYPE_GUID(MFVideoFormat_Intel_QS_WMV9,FCC('QSD3'));
//Intel QuickSync Decoder - H264
DEFINE_MEDIATYPE_GUID(MFVideoFormat_Intel_QS_H264,FCC('QSD4'));
//Intel QuickSync Decoder - HEVC
DEFINE_MEDIATYPE_GUID(MFVideoFormat_Intel_QS_HEVC,FCC('QSD5'));

#define INTEL_QUICKSYNC_DECODER_DLL_NAME L"IntelQSDecoder.dll"